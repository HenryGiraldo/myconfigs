#!/bin/bash

##    FUNCTIONS    ##
function cfind() { find -name '*.[ch]' | xargs grep -i -n $1 | awk '{split($0,a,":");printf "\033[1m%d\033[0m:\033[36m%s\033[0m:\033[33m%s\033[0m:%s\n", NR, a[1],a[2],a[3]}'| grep --colour -i $1; }

function cvi ()
{
  if [ $# -lt 2 ]; then
    vim -p +/$1/ `find -name '*.[ch]' | xargs grep -i -n -l "$1"`;
  else
    local LINE=`find -name '*.[ch]' | xargs grep -i -n "$1" | sed -n "$2 p"`
    vim +/$1/ +`echo "$LINE" | cut -d: -f2` `echo "$LINE" | cut -d: -f1`;
  fi
}

function get_desktop()
{
  echo $DESKTOP_SESSION
}

#$1 message title
#$2 message
function infome()
{
  TITLE=$1
  MSG=$2
  zenity \
    --info \
    --text="<span size=\"xx-large\">Time is $(date +%Hh%M).</span>\n\n $MSG." \
    --title="$TITLE" \
    --ok-label="Sip"
}

# $1 - string to find and replace
# $2 - new string (to make replaces)
# $3 - directory reference
function multi_replace()
{
  echo "Replacing from $1 to $2 in:"
  GREP_RETURN=$(grep -rl $1 $3)
  echo "$GREP_RETURN"
  echo "$GREP_RETURN" | xargs sed -i "s/$1/$2/g"
}


function gen_cscope_database()
{
  find . -name "*.c" -o -name "*.cpp" -o -name "*.h" -o -name "*.hpp" > /tmp/cscope.files
  cscope -i /tmp/cscope.files
  CSCOPE_DB=cscope.out; export CSCOPE_DB
}


fmv() {
  echo $2
  cp $2 $2.bk 2> /dev/null
  rm $2 2> /dev/null
  #SELECT COPY OF LN
  ln -s $(realpath $1) $2
  #  cp $1 $2
}


#The first thing you’ll need to do is make sure you’ve run the keygen command to generate the keys:
#ssh-keygen -t rsa
#Then use this command to push the key to the remote server, modifying it to match your server name.
#  cat ~/.ssh/id_rsa.pub | ssh user@hostname 'cat >> .ssh/authorized_keys'

#find . -name '*.orig' -delete

##     ALIAS      ##

#PARCELLITE
#Ctrl+Alt+H
#Ctrl+Mayus+H

#SUDO alias
alias sudo='sudo '
alias mini='sudo minicom -D /dev/ttyUSB0'

#GIT alias
alias gs='git status '
alias ga='git add '
alias gb='git branch '
alias gc='git commit'
alias gd='git diff'
alias gk='git checkout'
alias gitdraw="git log --graph --oneline --decorate"

#cd alias
alias ..='cd ..'
alias ...='cd ../../'
alias ....='cd ../../../'
alias .....='cd ../../../../'

## Colorize the ls output ##
alias ls='ls --color=auto'

## Use a long listing format ##
alias ll='ls -la'

## Show hidden files ##
alias l.='ls -d .* --color=auto'

# distro specific  - Debian / Ubuntu and friends #
# install with apt-get
alias apt-get="sudo apt-get"
alias updatey="sudo apt-get --yes"

# update on one command
alias update='sudo apt-get --yes update && sudo apt-get upgrade --yes'

## pass options to free ##
alias meminfo='free -m -l -t'

## get top process eating memory
alias psmem='ps auxf | sort -nr -k 4'
alias psmem10='ps auxf | sort -nr -k 4 | head -10'

## get top process eating cpu ##
alias pscpu='ps auxf | sort -nr -k 3'
alias pscpu10='ps auxf | sort -nr -k 3 | head -10'

## Get server cpu info ##
alias cpuinfo='lscpu'

## get GPU ram on desktop / laptop##
alias gpumeminfo='grep -i --color memory /var/log/Xorg.0.log'

#grep color
alias grep='grep --color'

## pass options to free ##
alias meminfo='free -m -l -t'

## get top process eating memory
alias psmem='ps auxf | sort -nr -k 4'
alias psmem10='ps auxf | sort -nr -k 4 | head -10'

## get top process eating cpu ##
alias pscpu='ps auxf | sort -nr -k 3'
alias pscpu10='ps auxf | sort -nr -k 3 | head -10'

## Get server cpu info ##
alias cpuinfo='lscpu'

## get GPU ram on desktop / laptop##
alias gpumeminfo='grep -i --color memory /var/log/Xorg.0.log'

## Cscope
alias cscope_update='cscope -q -R -b'

## Simple VIM
alias svim='vim -u ~/.simple_vimrc'

## Fix endlines
alias fixendl='git config --global core.autocrlf true'

## Hide CR
alias hidecr='git config --global core.whitespace cr-at-eol'
