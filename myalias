#!/bin/bash

##    FUNCTIONS    ##
function cfind() { find -name '*.[ch]' | xargs grep -i -n $1 | awk '{split($0,a,":");printf "\033[1m%d\033[0m:\033[36m%s\033[0m:\033[33m%s\033[0m:%s\n", NR, a[1],a[2],a[3]}'| grep --colour -i $1; }

function cvi ()
{
  if [ $# -lt 2 ]; then
    vim -p +/$1/ `find -name '*.[ch]' | xargs grep -i -n -l "$1"`;
  else
    local LINE=`find -name '*.[ch]' | xargs grep -i -n "$1" | sed -n "$2 p"`
    vim +/$1/ +`echo "$LINE" | cut -d: -f2` `echo "$LINE" | cut -d: -f1`;
  fi
}

function get_desktop()
{
  echo $DESKTOP_SESSION
}

#$1 message title
#$2 message
function infome()
{
  TITLE=$1
  MSG=$2
  zenity \
    --info \
    --text="<span size=\"xx-large\">Time is $(date +%Hh%M).</span>\n\n $MSG." \
    --title="$TITLE" \
    --ok-label="Sip"
}

#Remove all stopped DOCKER containers.
function rm_stop_docker_containers()
{
  docker rm $(docker ps -a -q)
}

#Remove all untagged DOCKER images.
function rm_untag_docker_images()
{
  docker rmi $(docker images | grep "<none>" | awk '{print $3}')
}

# $1 - string to find and replace
# $2 - new string (to make replaces)
# $3 - directory reference
function multi_replace()
{
  echo "Replacing from $1 to $2 in:"
  GREP_RETURN=$(grep -rl $1 $3)
  echo "$GREP_RETURN"
  echo "$GREP_RETURN" | xargs sed -i "s/$1/$2/g"
}

##     ALIAS      ##

#SUDO alias
alias sudo='sudo '

#GIT alias
alias gs='git status '
alias ga='git add '
alias gb='git branch '
alias gc='git commit'
alias gd='git diff'
alias gk='git checkout'
alias gitdraw="git log --graph --oneline --decorate"

#cd alias
alias ..='cd ..'
alias ...='cd ../../'
alias ....='cd ../../../'
alias .....='cd ../../../../'

## Colorize the ls output ##
alias ls='ls --color=auto'

## Use a long listing format ##
alias ll='ls -la'

## Show hidden files ##
alias l.='ls -d .* --color=auto'

# distro specific  - Debian / Ubuntu and friends #
# install with apt-get
alias apt-get="sudo apt-get"
alias updatey="sudo apt-get --yes"

# update on one command
alias update='sudo apt-get --yes update && sudo apt-get upgrade --yes'

## pass options to free ##
alias meminfo='free -m -l -t'

## get top process eating memory
alias psmem='ps auxf | sort -nr -k 4'
alias psmem10='ps auxf | sort -nr -k 4 | head -10'

## get top process eating cpu ##
alias pscpu='ps auxf | sort -nr -k 3'
alias pscpu10='ps auxf | sort -nr -k 3 | head -10'

## Get server cpu info ##
alias cpuinfo='lscpu'

## get GPU ram on desktop / laptop##
alias gpumeminfo='grep -i --color memory /var/log/Xorg.0.log'

#grep color
alias grep='grep --color'

## pass options to free ##
alias meminfo='free -m -l -t'

## get top process eating memory
alias psmem='ps auxf | sort -nr -k 4'
alias psmem10='ps auxf | sort -nr -k 4 | head -10'

## get top process eating cpu ##
alias pscpu='ps auxf | sort -nr -k 3'
alias pscpu10='ps auxf | sort -nr -k 3 | head -10'

## Get server cpu info ##
alias cpuinfo='lscpu'

## get GPU ram on desktop / laptop##
alias gpumeminfo='grep -i --color memory /var/log/Xorg.0.log'

## DOCKER
# Docker functions
function dumount()
{
  docker stop $1; docker rm $1
}

function dmount()
{
  docker run --privileged -v "$(pwd):/root/external" -v "$1"_data:/root/data -t -dP --net="host" --cap-add NET_ADMIN --name $1 docker.aoifes.com/$1
}

function dopen_bash()
{
  docker exec -ti $1 script -q -c bash
}

## Docker alias
alias xmake='docker run --rm -v "$(pwd):/root/src" -v "/home/egiraldo/workspace/ecowrt:/root/toolchain" -it docker.aoifes.com/cross_compile'
alias xmakelede='docker run --rm -v "$(pwd):/root/src" -v "/home/egiraldo/workspace/lede_with_cht:/root/toolchain" -it docker.aoifes.com/cross_compile'
alias xgdb='docker run --rm -v "$(pwd):/root/src" -v "/home/egiraldo/workspace/ecowrt:/root/toolchain" -it docker.aoifes.com/cross_gdb'
#alias dmake='docker run -u 1000:1000 --rm --net="host" --cap-add NET_ADMIN -v "$(pwd):/root/src" -t docker.aoifes.com/compile_cht'
alias dmake='docker run --rm --net="host" --cap-add NET_ADMIN -v "$(pwd):/root/src" -t docker.aoifes.com/compile_cht'
alias xbackend='docker run -p 8080:8080 -p 8443:8443 -d docker.aoifes.com/manager_backend'
#alias build_ecowifi='docker run --rm -ti -v "$(pwd):/root/src" docker.aoifes.com/compile_ecowifi $@'
alias build_ecowifi='docker run -u 1000:1000 --rm -ti -v "$(pwd):/root/src" docker.aoifes.com/compile_ecowifi $@'
alias xmanager="docker run --name manager --rm -it --cap-add NET_ADMIN  -p 8000:8000 -p 8443:8443 -p 8080:8080 -p 25007:25007 docker.aoifes.com/manager_backend_frontend"
#alias chmake='docker run --rm -ti -v "$(pwd):/root/src" docker.aoifes.com/chmake $@'
alias chmake='docker run -u1000:1000 --rm -ti -v "$(pwd):/root/src" docker.aoifes.com/chmake $@'
alias dlab='dumount lab;dmount lab;dopen_bash lab'

alias dockerupdate="docker images | grep -v '<none>\|REPOSITORY' | awk '{print \$1}' | while read l; do docker pull \$l;done"
#FIXME: exec rm_untag_docker_images even when rm_stop_docker_containers fails
alias dockerclean="{rm_stop_docker_containers > /dev/null 2>&1 && rm_untag_docker_images} || echo 'Nothing to remove'"
#Other
alias bashlab='dopen_bash lab'

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
